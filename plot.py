import matplotlib.pyplot as plt
'''ResSESGDM = [0.1361, 0.2046, 0.2654, 0.272, 0.3179, 0.3139, 0.376, 0.3819, 0.395, 0.4193, 0.4398, 0.4317, 0.4556, 0.4703, 0.4636, 0.4774, 0.4822, 0.4837, 0.4921, 0.4982, 0.497, 0.5183, 0.5231, 0.5224, 0.5054, 0.5159, 0.5374, 0.54, 0.531, 0.5362, 0.5392, 0.5392, 0.5253, 0.5373, 0.5373, 0.5404, 0.5224, 0.5453, 0.5523, 0.5532, 0.5423, 0.544, 0.5494, 0.5438, 0.5539, 0.5382, 0.5517, 0.5486, 0.5488, 0.5578]
ResSGDM = [0.1109, 0.1678, 0.2023, 0.25, 0.2731, 0.3026, 0.331, 0.3333, 0.3672, 0.3897, 0.4046, 0.42, 0.4201, 0.4481, 0.4448, 0.4531, 0.4604, 0.4791, 0.483, 0.4719, 0.499, 0.503, 0.4822, 0.492, 0.5184, 0.5147, 0.5167, 0.5208, 0.526, 0.5234, 0.5197, 0.5048, 0.5369, 0.5165, 0.5492, 0.5401, 0.526, 0.5436, 0.5415, 0.5412, 0.542, 0.555, 0.5516, 0.5423, 0.5555, 0.5441, 0.5484, 0.5425, 0.5518, 0.5599]
plt.plot(range(len(ResSGDM)), ResSESGDM)

plt.plot(range(len(ResSGDM)), ResSGDM)
plt.show()'''

R5e_3 = [0.1248, 0.1734, 0.1764, 0.2358, 0.2274, 0.256, 0.2376, 0.2418, 0.2628, 0.2786, 0.2778, 0.2718, 0.3004, 0.296, 0.268, 0.2932, 0.2704, 0.2866, 0.309, 0.306, 0.3072, 0.2976, 0.3044, 0.3058, 0.3344, 0.3176, 0.2882, 0.3044, 0.3044, 0.3086, 0.318, 0.3128, 0.3084, 0.3244, 0.267, 0.2948, 0.3138, 0.2962, 0.2962, 0.3278, 0.3376, 0.3052, 0.3048, 0.3222, 0.3258, 0.321, 0.2854, 0.3114, 0.321, 0.3088]
R1e_3 = [0.1382, 0.1876, 0.2234, 0.2862, 0.2982, 0.3198, 0.337, 0.3438, 0.359, 0.3878, 0.405, 0.3884, 0.3864, 0.4108, 0.4132, 0.4308, 0.4244, 0.437, 0.4378, 0.4438, 0.4416, 0.434, 0.4438, 0.4514, 0.4656, 0.4618, 0.4734, 0.4828, 0.455, 0.4768, 0.4694, 0.4572, 0.4538, 0.4796, 0.4682, 0.4734, 0.476, 0.4864, 0.472, 0.4996, 0.4688, 0.4836, 0.494, 0.4658, 0.4918, 0.4882, 0.4986, 0.496, 0.4536, 0.492]
R8e_4 = [0.145,  0.2052, 0.2428, 0.2668, 0.2958, 0.3084, 0.3108, 0.3302, 0.344, 0.3824, 0.3808, 0.3992, 0.389, 0.4196, 0.406, 0.416, 0.4228, 0.438, 0.431, 0.4524, 0.4434, 0.4494, 0.453, 0.4402, 0.4686, 0.4612, 0.4568, 0.4694, 0.4434, 0.4684, 0.4594, 0.4714, 0.475, 0.4704, 0.4814, 0.4544, 0.476, 0.4782, 0.4748, 0.4616, 0.472, 0.4712, 0.4708, 0.4896, 0.47, 0.4778, 0.4812, 0.4682, 0.4618, 0.481]
R5e_4 = [0.1398, 0.201, 0.2456, 0.2722, 0.2734, 0.3162, 0.3488, 0.3578, 0.3648, 0.3832, 0.397, 0.3954, 0.4192, 0.4142, 0.4446, 0.439, 0.454, 0.4404, 0.4556, 0.4526, 0.4616, 0.4728, 0.4714, 0.4604, 0.4712, 0.4826, 0.488, 0.4858, 0.4916, 0.486, 0.4774, 0.4834, 0.4984, 0.5004, 0.4972, 0.4836, 0.509, 0.5134, 0.4978, 0.4896, 0.4932, 0.5, 0.5052, 0.5068, 0.4918, 0.485, 0.5062, 0.5034, 0.4968, 0.499]
R1e_4 = [0.133, 0.194, 0.2384, 0.2756, 0.3072, 0.3212, 0.3342, 0.3416, 0.35, 0.385, 0.4128, 0.401, 0.4202, 0.4438, 0.4434, 0.443, 0.444, 0.4546, 0.4674, 0.4606, 0.4746, 0.4854, 0.4788, 0.4824, 0.4892, 0.491, 0.496, 0.5044, 0.5018, 0.4922, 0.5016, 0.5058, 0.5084, 0.5082, 0.506, 0.5128, 0.5176, 0.5006, 0.503, 0.5124, 0.51, 0.5188, 0.5114, 0.5076, 0.51, 0.503, 0.5132, 0.5112, 0.5104, 0.5122]


e5_4_t = [0.087, 0.16517777777777778, 0.21006666666666668, 0.24893333333333334, 0.28042222222222224, 0.3074, 0.33444444444444443, 0.35686666666666667, 0.3741333333333333, 0.3925777777777778, 0.40746666666666664, 0.4214888888888889, 0.4335111111111111, 0.45104444444444447, 0.464, 0.4709777777777778, 0.48235555555555554, 0.49346666666666666, 0.5011333333333333, 0.5129111111111111, 0.5198666666666667, 0.5254222222222222, 0.5364888888888889, 0.5452444444444444, 0.5515555555555556, 0.5583555555555556, 0.5646, 0.5725555555555556, 0.5813333333333334, 0.5846222222222223, 0.5887777777777777, 0.5958222222222223, 0.5996222222222222, 0.6040222222222222, 0.6078888888888889, 0.6129333333333333, 0.6197111111111111, 0.6269555555555556, 0.6328222222222222, 0.6330444444444444, 0.6399777777777778, 0.6434444444444445, 0.6503777777777778, 0.6462888888888889, 0.6565333333333333, 0.6581777777777778, 0.6608222222222222, 0.6671777777777778, 0.6721777777777778, 0.6762222222222222]
e1_4_t = [0.09008888888888889, 0.1692, 0.21684444444444445, 0.25895555555555555, 0.2875111111111111, 0.3164888888888889, 0.33268888888888887, 0.3567111111111111, 0.3758222222222222, 0.3982, 0.4119111111111111, 0.4265777777777778, 0.4425777777777778, 0.45515555555555554, 0.47213333333333335, 0.48035555555555554, 0.48962222222222224, 0.5058, 0.5168888888888888, 0.5241333333333333, 0.5361111111111111, 0.5495111111111111, 0.5540888888888889, 0.5665111111111111, 0.5738, 0.5859777777777778, 0.5921111111111111, 0.6021777777777778, 0.6090444444444445, 0.6195777777777778, 0.6261333333333333, 0.6356888888888889, 0.6486, 0.6521777777777777, 0.6621111111111111, 0.6706222222222222, 0.6792222222222222, 0.686, 0.6945777777777777, 0.7044, 0.715, 0.7186, 0.7283333333333334, 0.7334222222222222, 0.7405111111111111, 0.7524666666666666, 0.7602222222222222, 0.767, 0.7735777777777778, 0.781]

bef_t = [0.0658, 0.12368888888888889, 0.169, 0.2043111111111111, 0.23653333333333335, 0.2621777777777778, 0.28326666666666667, 0.30233333333333334, 0.31926666666666664, 0.3340888888888889, 0.34628888888888887, 0.3622222222222222, 0.3739777777777778, 0.3876888888888889, 0.3957555555555556, 0.4063111111111111, 0.41786666666666666, 0.4235555555555556, 0.4336, 0.44022222222222224, 0.45135555555555557, 0.4572222222222222, 0.4634, 0.4689333333333333, 0.4763777777777778, 0.4861333333333333, 0.48877777777777776, 0.49364444444444444, 0.5022, 0.5091333333333333, 0.5134222222222222, 0.5181333333333333, 0.5155555555555555, 0.5218666666666667, 0.5274666666666666, 0.5335333333333333, 0.5381555555555556, 0.5412666666666667, 0.5419777777777778, 0.5483111111111111, 0.5528888888888889, 0.5559333333333333, 0.5570222222222222, 0.5619333333333333, 0.5628, 0.5677555555555556, 0.5712222222222222, 0.5720888888888889, 0.5727111111111111, 0.5786]
bef = [0.1072, 0.1444, 0.1774, 0.204, 0.2486, 0.2694, 0.2862, 0.2864, 0.3032, 0.3296, 0.3418, 0.3454, 0.341, 0.3604, 0.3708, 0.3778, 0.3898, 0.3998, 0.4062, 0.4288, 0.4192, 0.426, 0.4252, 0.4318, 0.4456, 0.449, 0.454, 0.4376, 0.4674, 0.457, 0.4672, 0.46, 0.4532, 0.4692, 0.456, 0.4796, 0.4604, 0.4672, 0.4782, 0.479, 0.5032, 0.495, 0.503, 0.4802, 0.481, 0.4914, 0.4948, 0.493, 0.5006, 0.4916]
aft_t = [0.0903111111111111, 0.17275555555555555, 0.23771111111111112, 0.28684444444444446, 0.3256222222222222, 0.3652, 0.3960222222222222, 0.4206, 0.4441333333333333, 0.4696444444444444, 0.48817777777777777, 0.5032666666666666, 0.5189777777777778, 0.5358888888888889, 0.5514444444444444, 0.5636, 0.5768, 0.5877777777777777, 0.5993333333333334, 0.6091555555555556, 0.6174444444444445, 0.6287555555555555, 0.6365777777777778, 0.6436222222222222, 0.6451333333333333, 0.6606666666666666, 0.6667333333333333, 0.6744, 0.6781555555555555, 0.684, 0.6914444444444444, 0.6957555555555556, 0.7019333333333333, 0.7079555555555556, 0.7134666666666667, 0.7136888888888889, 0.7192666666666667, 0.7282, 0.7286666666666667, 0.7358, 0.7424666666666667, 0.7431333333333333, 0.7469555555555556, 0.7521777777777777, 0.7532666666666666, 0.7595555555555555, 0.7572888888888889, 0.7632666666666666, 0.7673777777777778, 0.7704888888888889]
aft = [0.1456, 0.2186, 0.2748, 0.3026, 0.34, 0.379, 0.3912, 0.4166, 0.4372, 0.4306, 0.4694, 0.4884, 0.485, 0.4954, 0.523, 0.5136, 0.5342, 0.5498, 0.52, 0.5586, 0.5444, 0.5552, 0.5602, 0.5562, 0.5638, 0.563, 0.5566, 0.5758, 0.5766, 0.5674, 0.5798, 0.5638, 0.578, 0.5644, 0.5776, 0.5808, 0.591, 0.5658, 0.577, 0.5744, 0.5796, 0.584, 0.5794, 0.5764, 0.5822, 0.584, 0.5948, 0.58, 0.597, 0.597]

aft_t2 = [0.08377777777777778, 0.16484444444444443, 0.22433333333333333, 0.27595555555555557, 0.3216, 0.35617777777777776, 0.3900888888888889, 0.4178222222222222, 0.4487333333333333, 0.4663555555555556, 0.4907111111111111, 0.5140444444444444, 0.5278888888888889, 0.5496666666666666, 0.5680666666666667, 0.5806666666666667, 0.5939111111111111, 0.6077555555555556, 0.6229555555555556, 0.6310222222222223, 0.6412222222222222, 0.6550666666666667, 0.6663333333333333, 0.6748222222222222, 0.6850888888888889, 0.6933111111111111, 0.7037111111111111, 0.7126222222222223, 0.7186444444444444, 0.7258444444444444, 0.7328444444444444, 0.7421777777777778, 0.7470666666666667, 0.7484888888888889, 0.7608666666666667, 0.7616, 0.7679111111111111, 0.7734222222222222, 0.7788444444444445, 0.7806888888888889, 0.7870666666666667, 0.7930888888888888, 0.7968888888888889, 0.8000444444444444, 0.8065555555555556, 0.8114888888888889, 0.8132888888888888, 0.8196444444444444, 0.8176, 0.822]
aft2 = [0.1416, 0.2114, 0.2702, 0.3018, 0.3348, 0.3736, 0.3862, 0.4092, 0.4468, 0.451, 0.4696, 0.4986, 0.484, 0.502, 0.5242, 0.5388, 0.5394, 0.5198, 0.5606, 0.567, 0.573, 0.5622, 0.5614, 0.5788, 0.588, 0.5912, 0.5912, 0.5804, 0.5928, 0.5688, 0.5862, 0.5872, 0.5934, 0.5898, 0.5658, 0.6058, 0.6066, 0.6154, 0.5922, 0.5854, 0.6148, 0.5994, 0.6044, 0.6012, 0.607, 0.6234, 0.6142, 0.616, 0.6062, 0.6222]

CBAM_B = [0.143, 0.208, 0.2596, 0.3008, 0.349, 0.366, 0.3986, 0.392, 0.4396, 0.439, 0.4586, 0.453, 0.447, 0.4884, 0.4944, 0.5038, 0.5146, 0.5326, 0.5022, 0.538, 0.5492, 0.5406, 0.5352, 0.5402, 0.5622, 0.5612, 0.562, 0.5418, 0.5826, 0.5628, 0.579, 0.5924, 0.5544, 0.5726, 0.5832, 0.5888, 0.5766, 0.5652, 0.5754, 0.576, 0.5822, 0.5844, 0.5856, 0.5738, 0.5842, 0.58, 0.5686, 0.576, 0.5696, 0.57]
ECA_B = [0.1406, 0.2266, 0.2874, 0.3238, 0.3296, 0.3888, 0.4026, 0.4114, 0.4244, 0.4742, 0.4732, 0.4826, 0.503, 0.5118, 0.5094, 0.5264, 0.526, 0.5296, 0.5388, 0.534, 0.5144, 0.5448, 0.5564, 0.5512, 0.5402, 0.5652, 0.5562, 0.5706, 0.5798, 0.5684, 0.571, 0.574, 0.5858, 0.5754, 0.5692, 0.5752, 0.588, 0.559, 0.589, 0.5766, 0.574, 0.5942, 0.5906, 0.5792, 0.5876, 0.5734, 0.5784, 0.581, 0.5612, 0.568]
SE_B = [0.1456, 0.2186, 0.2748, 0.3026, 0.34, 0.379, 0.3912, 0.4166, 0.4372, 0.4306, 0.4694, 0.4884, 0.485, 0.4954, 0.523, 0.5136, 0.5342, 0.5498, 0.52, 0.5586, 0.5444, 0.5552, 0.5602, 0.5562, 0.5638, 0.563, 0.5566, 0.5758, 0.5766, 0.5674, 0.5798, 0.5638, 0.578, 0.5644, 0.5776, 0.5808, 0.591, 0.5658, 0.577, 0.5744, 0.5796, 0.584, 0.5794, 0.5764, 0.5822, 0.584, 0.5948, 0.58, 0.597, 0.597]
NONE_B = [0.1246, 0.1818, 0.2342, 0.281, 0.3116, 0.3386, 0.3638, 0.3848, 0.415, 0.4382, 0.465, 0.4598, 0.4666, 0.497, 0.4866, 0.477, 0.5012, 0.5236, 0.5224, 0.5314, 0.5322, 0.5254, 0.5468, 0.5398, 0.5496, 0.548, 0.5498, 0.5532, 0.5752, 0.5542, 0.5612, 0.561, 0.5702, 0.5618, 0.5762, 0.5702, 0.5706, 0.5698, 0.5744, 0.5612, 0.5542, 0.5714, 0.5646, 0.561, 0.5828, 0.5832, 0.5784, 0.5778, 0.5676, 0.5778]

Adam = [0.1816, 0.2332, 0.296, 0.3242, 0.3768, 0.391, 0.416, 0.4366, 0.46, 0.473, 0.4796, 0.501, 0.5076, 0.5054, 0.519, 0.5176, 0.5338, 0.539, 0.5368, 0.5454, 0.5574, 0.5574, 0.5652, 0.5626, 0.5546, 0.5636, 0.5638, 0.563, 0.5652, 0.5672, 0.5806, 0.5748, 0.5708, 0.5794, 0.5824, 0.5756, 0.5752, 0.5774, 0.581, 0.5846, 0.5784, 0.5832, 0.5886, 0.5872, 0.5836, 0.595, 0.5916, 0.5744, 0.586, 0.5782]

CBAM_Pro = [0.1454, 0.2274, 0.2844, 0.3458, 0.3684, 0.3922, 0.4192, 0.4338, 0.4632, 0.4698, 0.49, 0.4924, 0.5072, 0.5256, 0.5366, 0.5258, 0.5412, 0.5464, 0.5432, 0.5444, 0.5632, 0.533, 0.5554, 0.5564, 0.543, 0.5644, 0.558, 0.5692, 0.5798, 0.5728, 0.561, 0.558, 0.5712, 0.576, 0.579, 0.551, 0.579, 0.565, 0.5738, 0.5762, 0.5648, 0.5752, 0.585, 0.5824, 0.5826, 0.575, 0.5702, 0.5628, 0.5828, 0.584]
CBAM_B = [0.143, 0.208, 0.2596, 0.3008, 0.349, 0.366, 0.3986, 0.392, 0.4396, 0.439, 0.4586, 0.453, 0.447, 0.4884, 0.4944, 0.5038, 0.5146, 0.5326, 0.5022, 0.538, 0.5492, 0.5406, 0.5352, 0.5402, 0.5622, 0.5612, 0.562, 0.5418, 0.5826, 0.5628, 0.579, 0.5924, 0.5544, 0.5726, 0.5832, 0.5888, 0.5766, 0.5652, 0.5754, 0.576, 0.5822, 0.5844, 0.5856, 0.5738, 0.5842, 0.58, 0.5686, 0.576, 0.5696, 0.57]

'''plt.plot(range(len(bef_t)), bef_t)
plt.plot(range(len(bef)), bef)'''
plt.plot(range(len(CBAM_Pro)), CBAM_Pro)
plt.plot(range(len(CBAM_B)), CBAM_B)
plt.xlabel("epoch")
plt.legend(["CBAM_Pro",  "CBAM"])
plt.show()

y = [347.9, 358.9]
x = ['CBAM', 'CBAM-Pro']
tags = ["CBAM", "CBAM_Pro"]
plt.bar(['CBAM'], [347.9], label='CBAM')
plt.bar(['CBAM-Pro'], [358.9], label='CBAM-Pro')
plt.xlabel('Attention module')
plt.ylabel('Training speed: examples per second')
for i in range(len(x)):
    plt.text(x[i], y[i], str(y[i]))
plt.ylim([330, 370])
plt.show()


y = [11890548, 11803580]
x = ['CBAM', 'CBAM-Pro']
tags = ["CBAM", "CBAM_Pro"]
plt.bar(['CBAM'], [11890548], label='CBAM')
plt.bar(['CBAM-Pro'], [11803580], label='CBAM-Pro')
plt.xlabel('Attention module')
plt.ylabel('Numbers of parameters')
for i in range(len(x)):
    plt.text(x[i], y[i], str(y[i]))
plt.ylim([11800000, 11900000])
plt.show()

cifar10_eval = [0.5278, 0.6316, 0.6606, 0.6844, 0.7388, 0.7508, 0.7546, 0.7698, 0.7836, 0.7898, 0.8282, 0.8456, 0.8424, 0.8408, 0.8388, 0.8424, 0.8484, 0.8512, 0.8534, 0.8472, 0.8534, 0.8528, 0.8532, 0.8616, 0.8552, 0.8544, 0.852, 0.8548, 0.8502, 0.8592, 0.8484, 0.8568, 0.8596, 0.8574, 0.8554, 0.8522, 0.8518, 0.8546, 0.861, 0.8594, 0.8564, 0.8544, 0.8538, 0.8532, 0.8582, 0.861, 0.8574, 0.859, 0.8556, 0.8536]
cifar10_train = [0.4305555555555556, 0.5866444444444444, 0.6566444444444445, 0.7033111111111111, 0.7352666666666666, 0.7547777777777778, 0.7698222222222222, 0.7836444444444445, 0.7917777777777778, 0.8058, 0.8474222222222222, 0.8608444444444444, 0.8669555555555556, 0.8728666666666667, 0.8750666666666667, 0.8781777777777777, 0.8806444444444445, 0.8863555555555556, 0.8882666666666666, 0.8898888888888888, 0.8968888888888888, 0.8991111111111111, 0.9024, 0.9024222222222222, 0.9034444444444445, 0.9044222222222222, 0.9027777777777778, 0.9053777777777777, 0.9043555555555556, 0.9034888888888889, 0.9039777777777778, 0.9056888888888889, 0.9052444444444444, 0.9056222222222222, 0.9046222222222222, 0.9045555555555556, 0.9053111111111111, 0.9045777777777778, 0.9071111111111111, 0.9061777777777777, 0.9036, 0.9085777777777778, 0.9075333333333333, 0.9067555555555555, 0.9071777777777777, 0.9063555555555556, 0.9074888888888889, 0.9078666666666667, 0.9052666666666667, 0.9057555555555555]
cifar10_loss = [1.5482102350023057, 1.162006760957506, 0.9820129328091939, 0.8553358308156331, 0.7675485804875691, 0.7125961842007107, 0.6637837564150493, 0.6317711670981513, 0.5991265814145406, 0.5643816455072826, 0.4398874096777704, 0.40147817974090577, 0.3853248796145121, 0.36877400618659123, 0.36122457290225557, 0.3529530941698286, 0.34189424918492634, 0.33053739236195884, 0.32082453475528294, 0.3162580405871073, 0.2967815142949422, 0.2882362376213074, 0.2844924694273207, 0.2841555804358588, 0.2816270306693183, 0.274976842212677, 0.28108146548801, 0.2761356627464294, 0.273754270474116, 0.27628776926199594, 0.2764649663315879, 0.275726309633255, 0.2735153801812066, 0.27017014932897354, 0.272429272280799, 0.27309514554341635, 0.2709990586916606, 0.27587014083332484, 0.2708758927875095, 0.2686609155125088, 0.273652089632882, 0.26881586037741767, 0.2701860353151957, 0.2699103760825263, 0.2703053611384498, 0.2686791132926941, 0.26731377119488187, 0.26947790601915783, 0.2735657386965222, 0.27293530886967976]

plt.plot(range(len(cifar10_train)), cifar10_train)
plt.plot(range(len(cifar10_eval)), cifar10_eval)
plt.plot(range(len(cifar10_loss)), cifar10_loss)
plt.xlabel("epoch")
plt.legend(["cifar10_train_acc",  "cifar10_val_acc", "cifar10_loss"])
plt.show()

ResNet18 = [0.1246, 0.1818, 0.2342, 0.281, 0.3116, 0.3386, 0.3638, 0.3848, 0.415, 0.4382, 0.465, 0.4598, 0.4666, 0.497, 0.4866, 0.477, 0.5012, 0.5236, 0.5224, 0.5314, 0.5322, 0.5254, 0.5468, 0.5398, 0.5496, 0.548, 0.5498, 0.5532, 0.5752, 0.5542, 0.5612, 0.561, 0.5702, 0.5618, 0.5762, 0.5702, 0.5706, 0.5698, 0.5744, 0.5612, 0.5542, 0.5714, 0.5646, 0.561, 0.5828, 0.5832, 0.5784, 0.5778, 0.5676, 0.5778]
CBAM_Pro = [0.1454, 0.2274, 0.2844, 0.3458, 0.3684, 0.3922, 0.4192, 0.4338, 0.4632, 0.4698, 0.49, 0.4924, 0.5072, 0.5256, 0.5366, 0.5258, 0.5412, 0.5464, 0.5432, 0.5444, 0.5632, 0.533, 0.5554, 0.5564, 0.543, 0.5644, 0.558, 0.5692, 0.5798, 0.5728, 0.561, 0.558, 0.5712, 0.576, 0.579, 0.551, 0.579, 0.565, 0.5738, 0.5762, 0.5648, 0.5752, 0.585, 0.5824, 0.5826, 0.575, 0.5702, 0.5628, 0.5828, 0.584]
CBAM_B = [0.143, 0.208, 0.2596, 0.3008, 0.349, 0.366, 0.3986, 0.392, 0.4396, 0.439, 0.4586, 0.453, 0.447, 0.4884, 0.4944, 0.5038, 0.5146, 0.5326, 0.5022, 0.538, 0.5492, 0.5406, 0.5352, 0.5402, 0.5622, 0.5612, 0.562, 0.5418, 0.5826, 0.5628, 0.579, 0.5924, 0.5544, 0.5726, 0.5832, 0.5888, 0.5766, 0.5652, 0.5754, 0.576, 0.5822, 0.5844, 0.5856, 0.5738, 0.5842, 0.58, 0.5686, 0.576, 0.5696, 0.57]
plt.plot(range(len(ResNet18)), ResNet18)
plt.plot(range(len(CBAM_Pro)), CBAM_Pro)

plt.xlabel("epoch")
plt.legend(["ResNet18_val_acc",   "ResNet18_CBAM-Pro-val_acc"])
plt.show()

NONE_B = [0.1246, 0.1818, 0.2342, 0.281, 0.3116, 0.3386, 0.3638, 0.3848, 0.415, 0.4382, 0.465, 0.4598, 0.4666, 0.497, 0.4866, 0.477, 0.5012, 0.5236, 0.5224, 0.5314, 0.5322, 0.5254, 0.5468, 0.5398, 0.5496, 0.548, 0.5498, 0.5532, 0.5752, 0.5542, 0.5612, 0.561, 0.5702, 0.5618, 0.5762, 0.5702, 0.5706, 0.5698, 0.5744, 0.5612, 0.5542, 0.5714, 0.5646, 0.561, 0.5828, 0.5832, 0.5784, 0.5778, 0.5676, 0.5778]
Adam = [0.1816, 0.2332, 0.296, 0.3242, 0.3768, 0.391, 0.416, 0.4366, 0.46, 0.473, 0.4796, 0.501, 0.5076, 0.5054, 0.519, 0.5176, 0.5338, 0.539, 0.5368, 0.5454, 0.5574, 0.5574, 0.5652, 0.5626, 0.5546, 0.5636, 0.5638, 0.563, 0.5652, 0.5672, 0.5806, 0.5748, 0.5708, 0.5794, 0.5824, 0.5756, 0.5752, 0.5774, 0.581, 0.5846, 0.5784, 0.5832, 0.5886, 0.5872, 0.5836, 0.595, 0.5916, 0.5744, 0.586, 0.5782]
plt.plot(range(len(NONE_B)), NONE_B)
plt.plot(range(len(Adam)), Adam)
plt.xlabel("epoch")
plt.legend(["ResNet-18-SGD",  "ResNet-18-Adam"])
plt.show()

NO = [0.4414, 0.5146, 0.5906, 0.6086, 0.6422, 0.6842, 0.6916, 0.723, 0.7218, 0.726, 0.7834, 0.7862, 0.7904, 0.7966, 0.7942, 0.792, 0.798, 0.792, 0.8012, 0.7916, 0.8038, 0.8006, 0.8042, 0.8022, 0.8096, 0.8076, 0.814, 0.8052, 0.8078, 0.8044, 0.8046, 0.8088, 0.8122, 0.807, 0.8102]
SE = []
ECA = [0.485, 0.5734, 0.6282, 0.6552, 0.6798, 0.6912, 0.7206, 0.7094, 0.7294, 0.7364, 0.7916, 0.7984, 0.8034, 0.8018, 0.7984, 0.8016, 0.8094, 0.8094, 0.8126, 0.8086, 0.8238, 0.8106, 0.8188, 0.8158, 0.8144, 0.8204, 0.8186, 0.821, 0.8204, 0.8134, 0.816, 0.8152, 0.8212, 0.817, 0.8162]
CBAM = []
CBAM_Pro = [0.4694, 0.5734, 0.6372, 0.6416, 0.6874, 0.6904, 0.7004, 0.7326, 0.7096, 0.7424, 0.7848, 0.7952, 0.7874, 0.7968, 0.796, 0.8032, 0.8096, 0.8056, 0.8012, 0.8044, 0.8064, 0.803, 0.8098, 0.8076, 0.8104, 0.8038, 0.813, 0.809, 0.8148, 0.8096, 0.8072, 0.8072, 0.8106, 0.813]
plt.plot(range(len(NO)), NO)
plt.plot(range(len(ECA)), ECA)
plt.plot(range(len(CBAM_Pro)), CBAM_Pro)
plt.xlabel("epoch")
plt.legend(["ResNet-18",  "ResNet-18-ECA", "ResNet-18-CBAMPro"])
plt.show()
